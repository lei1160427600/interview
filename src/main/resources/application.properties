spring.datasource.url=jdbc:mysql://localhost:3306/marksystem?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#app.id = 12345
#apollo.meta = http://127.0.0.1:8080
# will inject 'application' namespace in bootstrap phase
#apollo.bootstrap.enabled = true
# will inject 'application', 'FX.apollo' and 'application.yml' namespaces in bootstrap phase
#apollo.bootstrap.namespaces = application,FX.apollo,application.yml
# put apollo initialization before logging system initialization
#apollo.bootstrap.eagerLoad.enabled=true
#request.timeout=2000
#batch=2000
server.port=7760
spring.redis.host=192.168.186.129
#spring.redis.cluster.p
spring.redis.cluster.nodes=192.168.186.129:7000,192.168.186.129:7001,192.168.186.129:7002,192.168.186.129:7003,192.168.186.129:7004,192.168.186.129:7005,192.168.186.129:7006,192.168.186.129:7007

##在群集中执行命令时要遵循的最大重定向数目
#share.redis.cluster.max-redirects=5
##Redis连接池在给定时间可以分配的最大连接数。使用负值无限制
#share.redis.jedis.pool.max-active=1000
##以毫秒为单位的连接超时时间
#share.redis.timeout=2000
##池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接
#share.redis.jedis.pool.max-idle=8
##目标为保持在池中的最小空闲连接数。这个设置只有在设置max-idle的情况下才有效果
#share.redis.jedis.pool.min-idle=5
##连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止
#share.redis.jedis.pool.max-wait=1000
##redis cluster只使用db0